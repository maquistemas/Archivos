<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:aop="http://www.springframework.org/schema/aop" 
xmlns:tx="http://www.springframework.org/schema/tx" 
xmlns:jdbc="http://www.springframework.org/schema/jdbc" 
xmlns:context="http://www.springframework.org/schema/context" 
xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
      http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
      
  <!--  in-memory database and a datasource --> 
  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
     <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
     <property name="url" value="jdbc:oracle:thin:@localhost:1521:XE"/>
     <property name="username" value="U_20082018"/>
     <property name="password" value="123"/>
  </bean>
  
   <!--bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
     <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
     <property name="url" value="jdbc:oracle:thin:@localhost:1521:XE"/>
     <property name="username" value="store"/>
     <property name="password" value="admin"/>
  </bean-->
  
  <!--bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		p:driverClassName="oracle.jdbc.driver.OracleDriver" 
		p:url="jdbc:oracle:thin:@localhost:1521:XE"
		p:username="store" 
		p:password="admin" /-->
  
  
  
  
  
  
  
  
  
  
  
  
  
  <!--  transaction manager, use JtaTransactionManager for global tx --> 
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
   <property name="dataSource" ref="dataSource" /> 
  </bean>
  
  
  <!--  enable component scanning (beware that this does not enable mapper scanning!) --> 
  <context:component-scan base-package="com.tecnoratones.mgtest.service" /> 
  
  
  <!--  enable autowire --> 
  <context:annotation-config /> 
  
  
  <!--  enable transaction demarcation with annotations --> 
  <tx:annotation-driven /> 
  
  
  <!--  define the SqlSessionFactory --> 
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
   <property name="dataSource" ref="dataSource" /> 
   <property name="typeAliasesPackage" value="com.tecnoratones.mgtest.model" /> 
  </bean>
  
  
  <!--  scan for mappers and let them be autowired --> 
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
   <property name="basePackage" value="com.tecnoratones.mgtest.dao" /> 
  </bean>
  
  
  </beans> 